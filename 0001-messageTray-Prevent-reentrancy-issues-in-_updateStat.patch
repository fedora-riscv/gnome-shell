From 43f67399a3964d5204021f1571bf918d2ffe9f89 Mon Sep 17 00:00:00 2001
From: "Jasper St. Pierre" <jstpierre@mecheye.net>
Date: Fri, 15 Nov 2013 10:34:04 -0500
Subject: [PATCH] messageTray: Prevent reentrancy issues in _updateState

The methods we call in _updateState may not be reentrant, so make
sure that we never get into a situation where _updateState, through
some crazy chain of events, calls itself.

https://bugzilla.gnome.org/show_bug.cgi?id=711694
---
 js/ui/messageTray.js | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/js/ui/messageTray.js b/js/ui/messageTray.js
index c66c9f6..7a8403c 100644
--- a/js/ui/messageTray.js
+++ b/js/ui/messageTray.js
@@ -2392,6 +2392,13 @@ const MessageTray = new Lang.Class({
     // _updateState() figures out what (if anything) needs to be done
     // at the present time.
     _updateState: function() {
+        // If our state changes caused _updateState to be called,
+        // just exit now to prevent reentrancy issues.
+        if (this._updatingState)
+            return;
+
+        this._updatingState = true;
+
         // Filter out acknowledged notifications.
         this._notificationQueue = this._notificationQueue.filter(function(n) {
             return !n.acknowledged;
@@ -2474,6 +2481,8 @@ const MessageTray = new Lang.Class({
         } else if (desktopCloneIsVisible && !desktopCloneShouldBeVisible) {
             this._hideDesktopClone();
         }
+
+        this._updatingState = false;
     },
 
     _tween: function(actor, statevar, value, params) {
-- 
1.8.4.2

